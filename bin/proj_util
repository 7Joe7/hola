#!/usr/bin/env ruby

require 'joe_utils'

class ProjectUtility

  include CLIHelper
  include RegExpHelper

  HELP_TEXT = 'Project utility:
    executes basic administrative tasks with project, so far supported options:
    g for pushing to github,
    e for pushing to heroku,
    ge for pushing to github and heroku,
    b for building a gem, notice, you need to be in the folder which is called as the .gemspec file of the gem,
    p for pushing it to rubygems.org,
    i for installing it locally,
    ip for pushing it to rubygems.org and installing it locally,
    h for help,
    text behind the command will be considered a message for git.',
  INCLUDE_GEM_NAME = 'You did not enter a gem name. Please include it as an argument to the script.',

  def process_input(input, options = {})
    input.each do |arg|
      case arg
        when '-g', '--github'
          options[:github] = true
        when '-e', '--heroku'
          options[:heroku] = true
        when '-ge'
          options[:github] = options[:heroku] = true
        when '-b', '--build'
          options[:gem_name] ||= get_current_folder
        when '-i', '--install'
          options[:gem_name] ||= get_current_folder
          options[:install] = true
        when '-p', '--push'
          options[:gem_name] ||= get_current_folder
          options[:push] = true
        when '-h', '--help'
          puts HELP_TEXT
          exit
        when '-ip'
          options[:gem_name] ||= get_current_folder
          options[:install] = options[:push] = true
        else
          options[:message] = arg
      end
    end
    options
  end

  def run
    options = process_input(ARGV)
    commit_git(options[:message])
    commit_github if options[:github]
    deploy_heroku if options[:heroku]
    build_gem(options[:gem_name], options) if options[:gem_name]
  end
end

ProjectUtility.new.run